#!/usr/bin/env ruby

require 'rubygems'
require 'nokogiri'
require 'yaml'

# switch to directory containing markdown
Dir.chdir(File.expand_path(File.dirname(__FILE__)))

# iterate over each markdown file
toc = '<ul id="toc">'
chapters = Dir.glob('*.markdown').sort_by { |f| f.split('-')[0].to_i }
chapters.each do |chapter|
    # skip chapters that aren't done yet
    if ['5-shopping.markdown', '8-history.markdown', '16-privacy.markdown', '17-software.markdown'].include? chapter
        next
    end

    # load yaml front matter
    info = YAML.load_file(chapter)

    # add each chapter to table of contents
    file = chapter.split '.'
    if info['title']
        toc += "<li><a href=\"#{file[0]}.html\">#{info['title']}</a></li>"
    end
end

# close table fo contents
toc += '</ul>'

# write html to table of contents
File.open('_includes/toc.html', 'w') do |f|
    f.write toc
end

# generate site
`jekyll`

# append css to generated html
Dir.chdir '_site'
chapters = Dir.glob('*.html').sort_by { |f| f.split('-')[0].to_i }
chapters.each do |chapter|
    # only append css if a file exists for this chapter
    file = chapter.split '.'
    if File.exists? "css/#{file[0]}.css"
        # parse html
        f = File.open(chapter)
        document = Nokogiri::HTML(f)
        f.close

        # add css to head
        e = Nokogiri::XML::Node.new 'link', document
        e['rel'] = 'stylesheet'
        e['type'] = 'text/css'
        e['href'] = "css/#{file[0]}.css"
        document.at_css('head').add_child e

        # write file
        File.open(chapter, 'w') do |f|
            f.write(document.to_html)
        end
    end
end
